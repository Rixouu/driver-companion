name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  schedule:
    # Run security audit daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: false

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: false
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  test:
    name: Run Tests & Lint
    runs-on: ubuntu-latest
    needs: security-audit

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x] # Test on supported Node.js versions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Cache npm dependencies

      - name: Install dependencies
        run: npm ci # Use ci for faster, more reliable builds

      - name: Run TypeScript type checking
        run: npx tsc --noEmit

      - name: Run linters
        run: npm run lint

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Run E2E tests
        run: npx playwright test
        env:
          CI: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # Add CODECOV_TOKEN to your GitHub secrets
          files: ./coverage/coverage-final.json,./coverage/lcov.info # Adjust if your coverage report name/path differs
          fail_ci_if_error: true # Optional: fail CI if coverage upload fails
        # If not using Codecov, you can remove this step or use another coverage reporter action

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [security-audit, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
        env:
          # Required Supabase environment variables
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          # Optional Redis environment variables (with fallback values)
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL || 'https://placeholder.upstash.io' }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN || 'placeholder-token' }}
          # Application configuration
          NEXT_PUBLIC_APP_URL: http://localhost:3000
          NODE_ENV: test

  # Deploy to staging on develop branch
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [security-audit, test, build]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Add your staging deployment commands here
          # Example: npm run deploy:staging

  # Deploy to production on main branch
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [security-audit, test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Deploy to production
        run: |
          echo "Deploying to production environment..."
          # Add your production deployment commands here
          # Example: npm run deploy:production