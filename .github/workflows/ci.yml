name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop # Or your primary development branch
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Run Tests & Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x] # Test on supported Node.js versions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Cache npm dependencies

      - name: Install dependencies
        run: npm ci # Use ci for faster, more reliable builds

      - name: Run linters
        run: npm run lint
        # Add type checking if you have a separate script, e.g., npm run type-check

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # Add CODECOV_TOKEN to your GitHub secrets
          files: ./coverage/coverage-final.json,./coverage/lcov.info # Adjust if your coverage report name/path differs
          fail_ci_if_error: true # Optional: fail CI if coverage upload fails
        # If not using Codecov, you can remove this step or use another coverage reporter action

  # Optional: Add a build job to ensure the project builds successfully
  # build:
  #   name: Build Project
  #   runs-on: ubuntu-latest
  #   needs: test # Run build only if tests pass
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18.x' # Or your project's target Node version
  #         cache: 'npm'
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Build project
  #       run: npm run build 